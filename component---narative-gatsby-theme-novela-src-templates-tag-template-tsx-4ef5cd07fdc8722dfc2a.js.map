{"version":3,"sources":["webpack:///../@narative/gatsby-theme-novela/src/templates/tag.template.tsx","webpack:///../@narative/gatsby-theme-novela/src/sections/category/Category.Hero.tsx"],"names":["CategoryPage","location","pageContext","articles","group","tag","authors","additionalContext","pathname","title","narrow","category","AuthorPaginator","AuthorsGradient","p","theme","colors","gradient","colorModeTransition","CategoryHero","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","site","edges","node","siteMetadata","tilesIsActive","featuredAuthor","find","author","featured","Error","relative","id","HeadingContainer","style","maxWidth","Heading","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","data-a11y","aria-label","Tiles","Rows","fonts","sansSerif","primary","mediaqueries","tablet","phablet","grey","desktop","accent","hover"],"mappings":"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","file":"component---narative-gatsby-theme-novela-src-templates-tag-template-tsx-4ef5cd07fdc8722dfc2a.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport SEO from '@components/SEO';\nimport Layout from '@components/Layout';\nimport Paginator from '@components/Navigation/Navigation.Paginator';\n\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\nimport AuthorArticles from '../sections/author/Author.Articles';\nimport CategoryHero from '../sections/category/Category.Hero';\n\nfunction CategoryPage({ location, pageContext }) {\n  const { group: articles, tag } = pageContext;\n  const authors = pageContext.additionalContext.authors;\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} title={tag} />\n      <Section narrow>\n        <CategoryHero category={tag} authors={authors} />\n        <AuthorArticles articles={articles} />\n        <AuthorPaginator>\n          <Paginator {...pageContext} />\n        </AuthorPaginator>\n      </Section>\n      <AuthorsGradient />\n    </Layout>\n  );\n}\n\nexport default CategoryPage;\n\nconst AuthorsGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst AuthorPaginator = styled.div`\n  text-align: center;\n`;","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Bio from '@components/Bio';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { IAuthor } from '@types';\n\nimport { GridLayoutContext } from '../articles/Articles.List.Context';\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst CategoryHero = ({ category, authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  const featuredAuthor = (authors || []).find(author => author.featured);\n\n  if (!featuredAuthor) {\n    throw new Error(`\n      No featured Author found.\n      Please ensure you have at least featured Author.\n  `);\n  }\n\n  return (\n    // <Hero>\n    //   <Heading>{category}</Heading>\n    // </Hero>\n    <Section relative id=\"Articles__Hero\">\n    <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n      <Heading>{category}</Heading>\n    </HeadingContainer>\n    <SubheadingContainer>\n      <Bio author={featuredAuthor} />\n      <GridControlsContainer>\n        <GridButton\n          onClick={() => setGridLayout('tiles')}\n          active={tilesIsActive}\n          data-a11y=\"false\"\n          title=\"Show articles in Tile grid\"\n          aria-label=\"Show articles in Tile grid\"\n        >\n          <Icons.Tiles />\n        </GridButton>\n        <GridButton\n          onClick={() => setGridLayout('rows')}\n          active={!tilesIsActive}\n          data-a11y=\"false\"\n          title=\"Show articles in Row grid\"\n          aria-label=\"Show articles in Row grid\"\n        >\n          <Icons.Rows />\n        </GridButton>\n      </GridControlsContainer>\n    </SubheadingContainer>\n  </Section>\n\n  );\n};\n\nexport default CategoryHero;\n\nconst Hero = styled.div`\n  position: relative;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 35px auto 110px;\n`;\n\nconst Heading = styled.h1`\n  font-size: 38px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  margin-bottom: 15px;\n  font-weight: 600;\n  text-transform: capitalize;\n  ${mediaqueries.tablet`\n  `}\n  ${mediaqueries.phablet`\n  `}\n`;\n\nconst Subheading = styled.p`\n  margin: 0 auto;\n  max-width: 450px;\n  color: ${p => p.theme.colors.grey};\n  font-size: 18px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  line-height: 1.4;\n  text-align: center;\n  ${mediaqueries.phablet`\n    font-size: 14px;\n  `}\n`;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n"],"sourceRoot":""}