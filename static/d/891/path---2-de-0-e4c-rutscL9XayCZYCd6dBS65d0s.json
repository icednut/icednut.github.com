{"data":{"site":{"siteMetadata":{"title":"Icednut's Notes"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"출처: 스칼라로 배우는 함수형 프로그래밍 5장Chapter 05. 엄격성과 나태성이번 챕터에서 다룰 내용List의 한계Stream (Lazy List)스트림 순회의 비엄격성과 나태성List의 한계스칼라에서 다음 코드는 어떻게 수행될까?스칼라 List…","fields":{"slug":"/2018/12/18/20181218-scala-and-functional-programming-day04/"},"frontmatter":{"date":"2018-12-17 23:20:52","title":"스칼라 스터디 Day04 - 엄격성과 나태성","tags":["scala","functional programming"]}}},{"node":{"excerpt":"출처: 스칼라로 배우는 함수형 프로그래밍 4장Chapter 0…","fields":{"slug":"/2018/12/10/20181210-scala-and-functional-programming-day03/"},"frontmatter":{"date":"2018-12-10 23:47:36","title":"스칼라 스터디 Day03 - 예외를 이용하지 않은 오류 처리","tags":["scala","functional programming"]}}},{"node":{"excerpt":"출처: 스칼라로 배우는 함수형 프로그래밍 3장Chapter 03. 함수적 자료구조이번 챕터에서 다룰 내용함수형 프로그래밍 스타일 작성된  살펴보기 (함수적 자료구조)Pattern Matching함수형 자료구조에서의 Data Sharing…","fields":{"slug":"/2018/12/04/20181204-scala-and-functional-programming-day02/"},"frontmatter":{"date":"2018-12-04 21:31:10","title":"스칼라 스터디 Day02 - 함수적 자료구조","tags":["scala","functional programming"]}}},{"node":{"excerpt":"출처: 스칼라로 배우는 함수형 프로그래밍 1장, 2장CHAPTER 01. 함수형 프로그래밍이란 무엇인가?함수형 프로그래밍이란 부수 효과(Side Effect)가 없는 순수 함수(Pure Function…","fields":{"slug":"/2018/11/20181125-scala-and-functional-programming-day01/"},"frontmatter":{"date":"2018-11-25 02:20:10","title":"스칼라 스터디 Day01 - 함수형 프로그래밍이란?","tags":["scala","functional programming"]}}},{"node":{"excerpt":"목차About gRPCWhy gRPC?gRPC 내부 구조 및 동작 과정gRPC 개발 맛보기protobuf 정의gRPC ServergRPC ClientgRPC 통신의 4가지 방식UnaryServer StreamingClient Streaming…","fields":{"slug":"/2018/07/06/20180706-about-grpc/"},"frontmatter":{"date":"2018-07-04 22:15:27","title":"gRPC 살펴보기 (gRPC Overview)","tags":["gRPC"]}}},{"node":{"excerpt":"개요 책을 읽다가 실무에서도 많이 쓰일 것 같은 Java9에서의 Stream 다루기가 나오길래 정리!! null이 제거된 Stream 얻기id 목록 스트림이 있고, 아래의 lookup 메소드를 이용하여 얻어진 User 목록 중 null…","fields":{"slug":"/2018/05/24/20180524-java-stream-tips/"},"frontmatter":{"date":"2018-05-24 15:07:00","title":"Java9에서의 Stream에 관한 짧은 팁","tags":["java9","stream"]}}},{"node":{"excerpt":"다룰 내용앞에서 Reverse Visitor 패턴까지 적용한 To-Do 앱의 개선할 부분이 있는지 파악개선에 대해 Observer Pattern을 적용할 예정나머지는 나중에 작성 예정…","fields":{"slug":"/2018/04/12/20180412-understanding-observer-pattern/"},"frontmatter":{"date":"2018-04-12 01:37:54","title":"To-Do App 개발을 통한 Observer Pattern 이해하기 (javascript 버전)","tags":["design pattern","observer pattern"]}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":7,"skip":7,"numPages":7,"currentPage":2}}