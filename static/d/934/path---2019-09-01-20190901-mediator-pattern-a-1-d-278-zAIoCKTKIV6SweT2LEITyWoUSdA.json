{"data":{"site":{"siteMetadata":{"title":"Icednut's Notes","author":"Will Lee","siteUrl":"https://icednut.github.io"}},"markdownRemark":{"id":"26825211-0e30-5973-86f7-cb1d9d6fc92b","excerpt":"시작하기 전에..인터넷을 보면 Java로 Mediator 패턴을 구현 및 설명한 글들은 많이 있다. 그런데 왠지 체감이 되질 않아서 Vaadin을 이용하여 Todo Web Applicaiton을 만들면서 Mediator 패턴을 적용해보도록 하겠다. Vaadin…","html":"<h2>시작하기 전에..</h2>\n<p>인터넷을 보면 Java로 Mediator 패턴을 구현 및 설명한 글들은 많이 있다. 그런데 왠지 체감이 되질 않아서 Vaadin을 이용하여 Todo Web Applicaiton을 만들면서 Mediator 패턴을 적용해보도록 하겠다. Vaadin이란 간단하게 말해서 Java만으로 웹 프론트엔드 코딩을 할 수 있게 해주는 프레임워크로써 Javascript 없이 Java 언어만 가지고도 Progressive Web App 홈페이지를 만들 수 있다. Vaadin에 대한 설명은 <a href=\"https://vaadin.com/\">https://vaadin.com/</a> 을 가면 알 수 있다.\n<br/>\n<br/></p>\n<h2>Plain Todo App</h2>\n<p>일단 디자인 패턴이 하나도 적용되어 있지 않은 Todo 앱을 만들어보겠다. 그냥 단순하게 Button, TextField, CheckBox 등을 한 클래스에서 직접 조합하여 만들었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">프로젝트 파일 구조</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">space<span class=\"token punctuation\">.</span>icednut<span class=\"token punctuation\">.</span>dev<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>exercise<span class=\"token punctuation\">.</span>spring</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>button</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Button</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>checkbox</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Checkbox</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>icon</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Icon</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>icon</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">VaadinIcon</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>orderedlayout</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">HorizontalLayout</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>orderedlayout</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">VerticalLayout</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>textfield</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">TextField</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>router</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Route</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>vaadin<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>server</span><span class=\"token punctuation\">.</span>PWA<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Route</span>\n<span class=\"token annotation punctuation\">@PWA</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Design Pattern Exercise\"</span><span class=\"token punctuation\">,</span> shortName <span class=\"token operator\">=</span> <span class=\"token string\">\"DPE\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">VerticalLayout</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MainView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">VerticalLayout</span> todosList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VerticalLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">TextField</span> todoField <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Button</span> addButton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Button</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        addButton<span class=\"token punctuation\">.</span><span class=\"token function\">addClickListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> todoValue <span class=\"token operator\">=</span> todoField<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>todoValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">Checkbox</span> checkbox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Checkbox</span><span class=\"token punctuation\">(</span>todoValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">Icon</span> deleteButton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Icon</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VaadinIcon</span><span class=\"token punctuation\">.</span>CLOSE_CIRCLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">HorizontalLayout</span> todoElementLayout <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HorizontalLayout</span><span class=\"token punctuation\">(</span>checkbox<span class=\"token punctuation\">,</span> deleteButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                deleteButton<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"15px\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                deleteButton<span class=\"token punctuation\">.</span><span class=\"token function\">addClickListener</span><span class=\"token punctuation\">(</span>deleteEvent <span class=\"token operator\">-></span> todosList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>todoElementLayout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                todoElementLayout<span class=\"token punctuation\">.</span><span class=\"token function\">setAlignItems</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Alignment</span><span class=\"token punctuation\">.</span>CENTER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                todosList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>todoElementLayout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                todoField<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>todosList<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HorizontalLayout</span><span class=\"token punctuation\">(</span>todoField<span class=\"token punctuation\">,</span> addButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>하나의 클래스에 UI 구성 코드와 비즈니스 로직이 모두 들어있다. TextField, Button UI 구성한 뒤 버튼의 클릭 이벤트를 리스닝해서 Todo항목인 CheckBox와 DeleteButton을 화면에 추가하는 이 로직은 얼핏 보기에는 단순하면서 더 이상 손볼 필요도 없는 코드라고 생각할지도 모르겠다. 하지만 Todo 항목 추가, 삭제에 대한 행동을 Undo, Redo 할 수 있게 한다면? 또는 Todo 항목 수정에 대한 로직을 추가해야 된다고 한다면? 요구사항이 늘어날수록 MainView 클래스에 로직이 점점 늘어날 뿐만 아니라 비즈니스 로직도 MainView 클래스 하나에 모두 때려넣었기 때문에 유닛 테스트 코드 작성도 힘들어질 것이다.</p>\n<p>이럴 때 필요한게 역할과 책임으로 로직을 나누는 객체지향 프로그래밍 방식이 필요하다. 나는 개인적으로 UI 프로그래밍이 요구사항 변화가 빈번해서 객체지향 프로그래밍 적용이 수월하다고 생각한다. 요구사항 변화가 적은 영역이 어딘들 없겠느냐 하겠지만 UI 프로그래밍이 객체지향 프로그래밍 연습으로는 제격인 것 같다. 그래서 일부러 연습을 위해 Vaadin을 선택하기도 했다.</p>\n<p>위 코드를 실행하면 다음과 같은 화면을 볼 수 있다.</p>\n<h2>Mediator 패턴 적용 결과 미리보기</h2>\n<p>먼저 Mediator 패턴을 어떤식으로 적용하는지 장황하게 설명하기 전에 적용한 결과를 먼저 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">프로젝트 파일 구조</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","frontmatter":{"title":"Todo 앱을 통한 Mediator Pattern의 이해 (with Java, Vaadin)","date":"2019-09-01 22:06:11","tags":["java","vaadin","design pattern","mediator pattern"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019/09/01/20190901-mediator-pattern/","previous":{"fields":{"slug":"/2019/08/16/20190816-react-input-autocomplete-issue/"},"frontmatter":{"title":"React Input에서 자동완성(Auto Complete)가 활성화 안되는 이슈 해결하기"}},"next":null}}