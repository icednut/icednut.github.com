{"version":3,"sources":["webpack:///../@narative/gatsby-theme-novela/src/sections/category/Category.Hero.tsx","webpack:///../@narative/gatsby-theme-novela/src/templates/category.template.tsx"],"names":["CategoryHero","category","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","site","edges","node","siteMetadata","tilesIsActive","featuredAuthor","find","author","featured","Error","Section","relative","id","HeadingContainer","style","maxWidth","Heading","SubheadingContainer","Bio","GridControlsContainer","GridButton","onClick","active","data-a11y","title","aria-label","Tiles","Rows","p","theme","fonts","sansSerif","colors","primary","mediaqueries","tablet","phablet","grey","desktop","accent","hover","CategoryPage","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","narrow","AuthorPaginator","AuthorsGradient","gradient","colorModeTransition"],"mappings":"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","file":"component---narative-gatsby-theme-novela-src-templates-category-template-tsx-caa534be42fbf51269b7.js","sourcesContent":["import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Bio from '@components/Bio';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { IAuthor } from '@types';\n\nimport { GridLayoutContext } from '../articles/Articles.List.Context';\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst CategoryHero = ({ category, authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  const featuredAuthor = (authors || []).find(author => author.featured);\n\n  if (!featuredAuthor) {\n    throw new Error(`\n      No featured Author found.\n      Please ensure you have at least featured Author.\n  `);\n  }\n\n  return (\n    // <Hero>\n    //   <Heading>{category}</Heading>\n    // </Hero>\n    <Section relative id=\"Articles__Hero\">\n    <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n      <Heading>{category}</Heading>\n    </HeadingContainer>\n    <SubheadingContainer>\n      <Bio author={featuredAuthor} />\n      <GridControlsContainer>\n        <GridButton\n          onClick={() => setGridLayout('tiles')}\n          active={tilesIsActive}\n          data-a11y=\"false\"\n          title=\"Show articles in Tile grid\"\n          aria-label=\"Show articles in Tile grid\"\n        >\n          <Icons.Tiles />\n        </GridButton>\n        <GridButton\n          onClick={() => setGridLayout('rows')}\n          active={!tilesIsActive}\n          data-a11y=\"false\"\n          title=\"Show articles in Row grid\"\n          aria-label=\"Show articles in Row grid\"\n        >\n          <Icons.Rows />\n        </GridButton>\n      </GridControlsContainer>\n    </SubheadingContainer>\n  </Section>\n\n  );\n};\n\nexport default CategoryHero;\n\nconst Hero = styled.div`\n  position: relative;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 35px auto 110px;\n`;\n\nconst Heading = styled.h1`\n  font-size: 38px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  margin-bottom: 15px;\n  font-weight: 600;\n  text-transform: capitalize;\n  ${mediaqueries.tablet`\n  `}\n  ${mediaqueries.phablet`\n  `}\n`;\n\nconst Subheading = styled.p`\n  margin: 0 auto;\n  max-width: 450px;\n  color: ${p => p.theme.colors.grey};\n  font-size: 18px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  line-height: 1.4;\n  text-align: center;\n  ${mediaqueries.phablet`\n    font-size: 14px;\n  `}\n`;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport SEO from '@components/SEO';\nimport Layout from '@components/Layout';\nimport Paginator from '@components/Navigation/Navigation.Paginator';\n\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\nimport AuthorArticles from '../sections/author/Author.Articles';\nimport CategoryHero from '../sections/category/Category.Hero';\n\nfunction CategoryPage({ location, pageContext }) {\n  const { group: articles, category } = pageContext;\n  const authors = pageContext.additionalContext.authors;\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} title={category} />\n      <Section narrow>\n        <CategoryHero category={category} authors={authors} />\n        <AuthorArticles articles={articles} />\n        <AuthorPaginator>\n          <Paginator {...pageContext} />\n        </AuthorPaginator>\n      </Section>\n      <AuthorsGradient />\n    </Layout>\n  );\n}\n\nexport default CategoryPage;\n\nconst AuthorsGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst AuthorPaginator = styled.div`\n  text-align: center;\n`;"],"sourceRoot":""}